import { CodeFixAction, CompletionEntryDetails, CompletionInfo, DefinitionInfoAndBoundSpan, Diagnostic, FormatCodeOptions, FormatCodeSettings, GetCompletionsAtPositionOptions, JsxClosingTagInfo, LanguageService, OutliningSpan, QuickInfo, RenameInfo, RenameInfoOptions, RenameLocation, SignatureHelpItems, SignatureHelpItemsOptions, TextChange, UserPreferences } from "typescript";
import { LitPluginContext } from "./lit-plugin-context";
export declare class TsLitPlugin {
    private prevLangService;
    readonly context: LitPluginContext;
    private litAnalyzer;
    private get program();
    constructor(prevLangService: LanguageService, context: LitPluginContext);
    getCompletionEntryDetails(fileName: string, position: number, name: string, formatOptions: FormatCodeOptions | FormatCodeSettings | undefined, source: string | undefined, preferences: UserPreferences | undefined): CompletionEntryDetails | undefined;
    getCompletionsAtPosition(fileName: string, position: number, options: GetCompletionsAtPositionOptions | undefined): CompletionInfo | undefined;
    getSemanticDiagnostics(fileName: string): Diagnostic[];
    getDefinitionAndBoundSpan(fileName: string, position: number): DefinitionInfoAndBoundSpan | undefined;
    getCodeFixesAtPosition(fileName: string, start: number, end: number, errorCodes: readonly number[], formatOptions: FormatCodeSettings, preferences: UserPreferences): readonly CodeFixAction[];
    getQuickInfoAtPosition(fileName: string, position: number): QuickInfo | undefined;
    getOutliningSpans(fileName: string): OutliningSpan[];
    getJsxClosingTagAtPosition(fileName: string, position: number): JsxClosingTagInfo | undefined;
    getSignatureHelpItems(fileName: string, position: number, options: SignatureHelpItemsOptions | undefined): SignatureHelpItems | undefined;
    findRenameLocations(fileName: string, position: number, findInStrings: boolean, findInComments: boolean, providePrefixAndSuffixTextForRename?: boolean): readonly RenameLocation[] | undefined;
    getRenameInfo(fileName: string, position: number, options?: RenameInfoOptions): RenameInfo;
    getFormattingEditsForRange(fileName: string, start: number, end: number, settings: FormatCodeSettings): TextChange[];
}
//# sourceMappingURL=ts-lit-plugin.d.ts.map